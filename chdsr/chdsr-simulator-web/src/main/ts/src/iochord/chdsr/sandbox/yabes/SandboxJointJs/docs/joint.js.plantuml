@startuml "jointjs"

package "joint" {
  class Cell extends Backbone.Model {
    id: string;
  }

  class Graph extends Backbone.Model {
    cells: Array<Cell>;
  }

  interface HasGeometry {
    angle: number;
    position: { x: number, y: number };
  }

  interface IsPresentable {
    attrs: joint.dia.Cell.Selectors;
  }

  interface NestedAble {
    parent: joint.dia.Cell;
    embeds: Array<joint.dia.Cell>;
  }

  class Paper extends Backbone.View {
    model: Graph
  }

  class Element extends Cell implements HasGeometry, IsPresentable, NestedAble {
    angle: number;
    position: { x: number, y: number };
    size: { width: number, height: number };
    attrs: joint.dia.Cell.Selectors;
    parent: joint.dia.Cell;
    embeds: Array<joint.dia.Cell>;
  }

  class Link extends Cell {
    source: Element;
    target: Element;
  }

  package "shapes" {
    package "standards" {
      class BorderedImage extends Cell {

      }
      class Circle extends Cell {

      }
      class Cylinder extends Cell {

      }
      class DoubleLink extends Cell {

      }

      class AndSoOn extends Cell {

      }
      ' class Ellipse extends Cell {

      ' }
      ' class EmbeddedImage extends Cell {

      ' }
      ' class HeaderedRectangle extends Cell {

      ' }
      ' class Image extends Cell {

      ' }
      ' class InscribedImage extends Cell {

      ' }
      ' class Link extends Cell {

      ' }
      ' class Path extends Cell {

      ' }
      ' class Polygon extends Cell {

      ' }
      ' class Polyline extends Cell {

      ' }
      ' class Rectangle extends Cell {

      ' }
      ' class ShadowLink extends Cell {

      ' }
      ' class TextBlock extends Cell {

      ' }
    }
  }
}


@end