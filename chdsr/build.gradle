allprojects {
	ext {
		// Development mode using Scala IDE
		// Set this to false for production build using gradle
		devMode = true
	}

	apply plugin: 'java'
	apply plugin: 'scala'
	
	repositories {
		mavenCentral()
		flatDir {
			dir 'X:/opt/scalaide/plugins'
		}
	}   
	
	version {
		
	}
	
	dependencies {
		compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
		implementation('com.fasterxml.jackson.module:jackson-module-scala_2.12:2.9.8') {
			exclude group: 'org.scala-lang', module: 'scala-library'
		}
		compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.8'
		if (devMode) {
			compile 'org.scala-lang:org.scala-lang.scala-library_2.12.3.v20170725-052526-VFINAL-6ac6da8'
			compile 'org.scala-lang:org.scala-lang.scala-reflect_2.12.3.v20170725-052526-VFINAL-6ac6da8'
			compile 'org.scala-lang:org.scala-lang.scala-compiler_2.12.3.v20170725-052526-VFINAL-6ac6da8'
		} else {
			compile 'org.scala-lang:scala-library:2.12.8'
			compile 'org.scala-lang:scala-compiler:2.12.8'
		}
		compileOnly 'org.projectlombok:lombok:1.18.6'
		compile files('$sourceSets.main.scala.outputDir')
		annotationProcessor 'org.projectlombok:lombok:1.18.6'
		//testCompile 'org.scalatest:scalatest_2.12:3.2.0-SNAP10:'
		testCompile 'junit:junit:4.12'
	}
	
	compileJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
		options.encoding = "UTF-8"
	}

	sourceSets {
		main {
			scala {
				outputDir = file("$buildDir/classes/scala/main")
			}
			java {
				outputDir = file("$buildDir/classes/java/main")
			}
		}
	}

	tasks.compileJava.dependsOn compileScala
	tasks.compileScala.dependsOn.remove("compileJava")
	
	test {
		ignoreFailures = true
	}
}