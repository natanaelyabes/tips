@startuml "Create new node"

actor User
boundary "Palette Component  \n(NodePaletteComponent.vue \nor DataPaletteComponent.vue)" as p
control "Listen to events \n(PaletteMixin.ts)" as c1
control "Update Canvas \n(NodeMixin.ts or DataMixin.ts)" as c2
control "Save model" as c3

entity "Simulation model" as e1

User -> p

p -> c1 : "handleToolboxMouseDown(TYPE, event)"

alt TYPE == 'TOOLBOX.NODE'
  c1 -> c2 : "createNode(type, event)"
  activate c2
  c2 -> c2 : "moveNode(event, activePage)"
  alt on CanvasMixin.handleEscapeButton()
    c2 -> c2 : "cancelCreateNode(event)"
  else on CanvasMixin.handleCanvasMouseUp()
    c2 -> c3 : "saveNode(event, activePage)"
    c3 -> e1
    |||
    e1 --> c2
    |||
    c2 --> p
    deactivate c2
  end
else TYPE == 'TOOLBOX.DATA'
  c1 -> c2 : "createData(type, event)"
  activate c2
  c2 -> c2 : "moveData(event, activePage)"
  alt on CanvasMixin.handleEscapeButton()
    c2 -> c2 : "cancelCreateData(event)"
  else on CanvasMixin.handleCanvasMouseUp()
    c2 -> c3 : "saveData(event, activePage)"
    c3 -> e1
    |||
    e1 --> c2
    |||
    c2 --> p
    deactivate c2
  end
end

@enduml
